name: 'Deploy Frontend'

inputs:
  app:
    description: 'App that we want to deploy'
    required: true
  appJson:
    description: 'App that we want to deploy in JSON formate with any additional data'
    required: false

runs:
  using: 'composite'

  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: echo state value
      shell: bash
      run: echo ${{ inputs.app }}

    - name: Path
      shell: bash
      run: |
        affectedProjects=$(echo '/lib/test/hi')
        echo "affected-projects=$affectedProjects" >> $GITHUB_ENV

    - name: echo
      shell: bash
      run: echo $PRO_NAME
      env:
        PRO_NAME: ${{ format('dist/{0}', env.affected-projects) }}

    # - name: Use Node.js 16
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: 16.x

    # - name: Get app path
    #   uses: actions/github-script@v6
    #   id: path
    #   env:
    #     APP_NAME: ${{ inputs.app }}
    #   with:
    #     script: |
    #       const { APP_NAME } = process.env;
    #       const workspace = require('./workspace.json');
    #       return workspace.projects[APP_NAME];
    #     result-encoding: string

    # - name: Cache node_modules
    #   id: cache-modules
    #   uses: actions/cache@v3
    #   with:
    #     path: node_modules
    #     key: mono-${{ hashFiles('package-lock.json') }}

    # - name: Create env file
    #   shell: bash
    #   run: bash ./.github/scripts/createEnvFile.sh "$secrets"
    #   env:
    #     secrets: ${{ inputs.secrets }}

    # - name: Build
    #   shell: bash
    #   run: npx nx run ${{ inputs.app }}:${{env.BUILD_COMMAND}} --configuration=${{env.CONFIGURATION}}
    #   env:
    #     BUILD_COMMAND: ${{ inputs.appJson && fromJSON(inputs.appJson).buildCommand || 'build' }}
    #     CONFIGURATION: ${{ inputs.appJson && fromJSON(inputs.appJson).configuration || 'production' }}

    # - name: Vercel
    #   id: vercel
    #   if: hashFiles('dist/${{steps.path.outputs.result}}/main.js') != ''
    #   uses: amondnet/vercel-action@v20
    #   with:
    #     vercel-token: ${{ fromJSON(inputs.secrets).VERCEL_TOKEN }}
    #     github-token: ${{ fromJSON(inputs.secrets).GITHUB_TOKEN }}
    #     github-comment: false
    #     vercel-org-id: ${{ fromJSON(inputs.secrets).VERCEL_ORG_ID }}
    #     vercel-project-id: ${{ fromJSON(inputs.secrets).VERCEL_PROJECT_ID }}
    #     working-directory: ${{ env.WORKING_DIRECTORY }}
    #     vercel-args: ${{ inputs.vercelArgs }}
    #   env:
    #     WORKING_DIRECTORY: ${{ inputs.appJson && fromJSON(inputs.appJson).buildDirectory || 'dist/${{steps.path.outputs.result}}' }}

    # - name: Comment
    #   if: github.event_name == 'pull_request'
    #   uses: NejcZdovc/comment-pr@v2
    #   with:
    #     message: 'ðŸš€ Deployed ${{ inputs.app }} to ${{ steps.vercel.outputs.preview-url }}'
    #     identifier: 'COMMENT_PR_${{ inputs.app }}_APP'
    #   env:
    #     GITHUB_TOKEN: ${{ fromJSON(inputs.secrets).GITHUB_TOKEN }}
